<?xml version="1.0" encoding="UTF-8"?>
<configuration>
	<include resource="org/springframework/boot/logging/logback/base.xml"/>

	<!--日志输出采用logstash-->
	<!--	<appender name="LOGSTASH" class="net.logstash.logback.appender.LogstashTcpSocketAppender">-->
	<!--		&lt;!&ndash;logstash启动端口&ndash;&gt;-->
	<!--		<destination>localhost:9201</destination>-->
	<!--		<encoder charset="UTF-8" class="net.logstash.logback.encoder.LogstashEncoder"/>-->
	<!--	</appender>-->

	<!--======================================= 本地变量 ======================================== -->
	<!--在没有定义${LOG_HOME}系统变量的时候，可以设置此本地变量。提交测试、上线时，要将其注释掉，使用系统变量。 -->
	<!-- <property name="LOG_HOME" value="D:/data/logs" /> -->

	<!-- 应用名称：和统一配置中的项目代码保持一致（小写） -->
	<property name="cloud_server" value="peas-eureka" />
	<!-- 日期，按照日期来定模-->
	<property name="TODAY_DATE" value="%d{yyyy-MM-dd}"/>
	<!--日志文件保留天数 -->
	<property name="LOG_MAX_HISTORY" value="60" />
	<!--超过大小，就新建一个文件 -->
	<property name="LOG_MAX_SIZE" value="100MB" />
	<!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径 -->
	<!--应用日志文件保存路径 -->
	<property name="LOG_APP_HOME" value="/home/appdev/logs" />

	<!--=========================== 按照每天生成日志文件：默认配置=================================== -->
	<!--若输出的日志级别为error,发送邮件通知-->
	<appender name="ERROREMAIL" class="ch.qos.logback.classic.net.SMTPAppender">
		<!-- SMTP server的地址，必需指定。如网易的SMTP服务器地址是： smtp.163.com -->
		<smtpHost>smtp.qq.com</smtpHost>
		<smtpPort>587</smtpPort>
		<!-- 如果设置为true，appender将会使用SSL连接到日志服务器。默认值：false -->
		<SSL>true</SSL>
		<asynchronousSending>true</asynchronousSending>
		<!-- 发送邮件账号密码，默认为null -->
		<username>936992174@qq.com</username>
		<!-- 不是QQ密码，登录mail.qq.com，前往设置 账户 服务开启POP3/SMTP服务获取一个16个字符的密码-->
		<password>vlmqhwpailiubdih</password>
		<!--邮件发送方-->
		<from>936992174@qq.com</from>
		<!-- 指定发送到那个邮箱，可设置多个<to>属性，指定多个目的邮箱 -->
		<to>2749568231@qq.com</to>
		<subject>peas-eureka: %logger - %msg</subject>
		<!-- html格式 -->
		<layout class="ch.qos.logback.classic.html.HTMLLayout">
			<Pattern>%date%level%thread%logger{0}%line%message</Pattern>
		</layout>
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>ERROR</level>
		</filter>

	</appender>
	<!-- 控制台输出 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
		</encoder>
	</appender>
	<!-- 按照每天生成日志文件：主项目日志 -->
	<appender name="APP"
			  class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--日志文件输出的文件名 -->
			<FileNamePattern>${LOG_APP_HOME}/peas-eureka.%d{yyyy-MM-dd-HH}.%i.log</FileNamePattern>
			<!--日志文件保留天数 -->
			<MaxHistory>${LOG_MAX_HISTORY}</MaxHistory>
			<!-- 按照日期进行归档，并且对日志文件大小进行限制 -->
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<!-- 设置文件大于指定进行压缩归档 -->
				<maxFileSize>${LOG_MAX_SIZE}</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{500} - %msg%n</pattern>
		</encoder>
	</appender>
	<!--=============================== 日志输出: 默认主业务日志 ====================================== -->
	<logger name="org.springframework">
		<level value="WARN" />
	</logger>
	<logger name="org.apache.shiro">
		<level value="WARN" />
	</logger>
	<logger name="freemarker">
		<level value="WARN" />
	</logger>
	<logger name="org.hibernate">
		<level value="WARN" />
	</logger>
	<logger name="org.hibernate.SQL">
		<level value="WARN" />
	</logger>
	<logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="DEBUG" />
	<logger name="org.hibernate.type.descriptor.sql.BasicExtractor" level="DEBUG" />

	<!--只有测试环境和正式环境才发邮件-->
	<springProfile name="prod,test">
		<root level="INFO">
			<appender-ref ref="APP"/>
			<!-- 开启错误日志发送邮件 -->
			<appender-ref ref="ERROREMAIL"/>
			<!--需要在这里引用logstash这个appender-->
			<!--<appender-ref ref="LOGSTASH"/>-->
		</root>
	</springProfile>
	<springProfile name="dev,pre">
		<root level="INFO">
			<appender-ref ref="APP"/>
			<!-- 开启错误日志发送邮件 -->
<!--			<appender-ref ref="ERROREMAIL"/>-->
			<!--需要在这里引用logstash这个appender-->
			<!--<appender-ref ref="LOGSTASH"/>-->
		</root>
	</springProfile>

</configuration>
